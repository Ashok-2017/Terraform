AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template Copy from S3 to App
Parameters:
  ArtifactsBucket:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'ArtifactsBucket'
  RawBucketName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'RawBucketName'
  ExchangeBucketName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'ExchangeBucketName'
  SnowflakeExternalStageBucketName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'SnowflakeExternalStageBucketName'
  DgoExchangeBucketName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'DgoExchangeBucketName'
  JarFileName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/_env/artifacts/s3/path/S3CopyJar'
  Version:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/_env/VersionOfJar'
Conditions:
  CreateDevStg: !Or [!Equals [!Ref "Env" dev], !Equals [!Ref "Env", stg]]
  CreateProd: !Equals [!Ref "Env", prod]

Mappings: 
  Environment:
    stg:
      Value: staging
    dev:
      Value: development
    prod:
      Value: production
Resources:
  S3CopyApp:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "lambda-${Env}-s3-copy-app-${RegionCode}-all"
      Handler: com.generic.s3.copy.GenericS3Copier::handleRequest
      Runtime: java8
      Timeout: 900
      MemorySize: 512
      Description: s3 copy app
      CodeUri:
        Bucket: !Ref ArtifactsBucket
        key: !Sub ${JarFileName}
      Role: !If [CreateDevStg!GetAtt S3CopyAppRole.Arn, !GetAtt S3ProdCopyAppRole.Arn]
      Environment:
        Variables:
          GLOBAL_ENDPOINT_REGION: us-east-1
          HIST_RUN_TABLE: !Sub "${Env}_ETLStateLog"
          LAST_RUN_TABLE: !Sub "${Env}_ETLStateLastRunLog"
      Tags:
        version: !Sub ${Version}
        environment: !FindInMap
          - Environment
          - !Ref Env
          - Value
      S3CopyAppRole:
    Type: "AWS::IAM::Role"
    Condition: CreateDevStg
    Properties:
      RoleName: !Sub aws-sam-S3CopyAppRole-${Env}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName:  !Sub S3CopyAppPolicy-${Env}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action: 
              - ssm: GetParameters
              - ssm: GetParameter
              - ssm: GetparametersByPath
              Resource:
                Fn::Sub:
                - arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${parameterName}
                - parameterName: !Sub "${Env}/*"
                
    

