Transform: AWS::Serverless-2016-10-31
Description: SAM Template for RAF Campagian Rest API
Parameters:
  ArtifactsBucket:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'ArtifactsBucketName'
  LinkQueueName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'LinkQueueName'
  EmailToAnalyticsQueueName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'EmailToAnalyticsQueueName'
  SaveEmailResponsesToS3QueueName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'SaveEmailResponsesToS3QueueName'
  S3QueueName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: 'S3QueueName'
  JarFileName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/_env/artifacts/s3/path/HttpHandlerJar'
  LinkJarFileName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/_env/artifacts/s3/path/LinkHandlerJar'
  Version:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/_env/VersionOfJar'
  Env: 
    Type: String
    Description: prod/dev/stg
  RegionCode:
    Type: String
    Description: e.g for us-east-1
  Mappings:
    Environment: 
      stg:
        value: staging
      dev:
        value: development
      prod:
        value: production
 Globals:
   Function:
     Timeout: 30
     MemorySize: 512
     Runtime: java8
     Tags:
       environment: !FindInMap
         - Environment
         - !Ref Env
         - Value
       version: !Sub "${Version}"
  Resources:
    HandlePostEmail:
      Type: AWS::Serverless::Function
      Properties:
        FunctionName: !sub lambda-${Env}-handle-post-email-${RegionCode}-all
        Description: email-handle-post-email
        Handler: com.marketing.email.Handler::handleRequest
      CodeUri:
        Bucket: !Ref ArtifactsBucket
        Key: !Sub ${JarFileName}
      Role: !GetAtt HandlePostEmailRole.Arn
      Environment:
        Variables:
          REGION: !Ref AWS::Region
          SQS_URL_FOR_REQUESTS_TO_ANALYTICS_PLATFORM: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${EmailToAnalyticsQueueName}"
          FIFO_SQS_URL_FOR_REQUESTS_TO_ADOBE: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${EmailToAcsFifoQueueName}"
          SQS_URL_FOR_RAW_REQUESTS_AND_RESPONSE: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SaveEmailResponsesToS3QueueName}"
          SQS_URL_FOR_RAW_REQUESTS: !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SaveEmailRawToS3QueueName}"
     HandlePostEmailPermission:
        Type: "AWS::Lambda::Permission"
        DependsOn:
          - HandlePostEmail
        Properties:
          Action: lambda:InvokeFunction
          FunctionName: !Ref HandlePostEmail
          principal: apigateway.amazonaws.com
    HandlePostEmailRole:
       Type: "AWS::IAM::Role"
       Properties:
         RoleName: !Sub aws-sam-HandlePostEmailRole-${Env}
         AssumeRolePolicyDocument:
           Version: "2012-10-17"
           Statement:
             - Effect: Allow
               Principal: 
                 Service:
                 - lambda.amazonaws.com
               Action:
                 - 'sts: AssumeRole'
         Policies:
           - PolicyName:  !Sub HandlePostEmailPolicy-${Env}
             PolicyDocument:
               Version: "2012-10-17"
               Statement:
               - Effect:  Allow
                 Action: 
                  -  sqs: SendMessage*  
                 Resource:
                   - Fn::Sub:
                       - arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:${queueName}
                       - queueName: !Ref EmailToFifoQueueName
                   - Fn::Sub:
                       - arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:${queueName}
                       - queueName: !Ref SaveEmailResponsesToS3QueueName
                   - Fn::Sub:
                       - arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:${queueName}
                       - queueName: !Ref EmailToAnalyticsQueueName
                   - Fn::Sub:
                       - arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:${queueName}
                       - queueName: !Ref SaveEmailRawToS3QueueName
                - Efeect: Allow
                  Action: 
                    - kms:GenerateDataKey
                    - kms: Decrypt
                  Resource:
                    - Fn::Sub: arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/mapi-sqs-${Env}-key
               - Efeect: Allow
                 Action:
                   - cloudwatch: PutMetricData
                 Resource: *
               - Effect: Allow
                 Action:
                   - logs: *
                 Resource: arn:aws:logs:*:*:*  
                    
